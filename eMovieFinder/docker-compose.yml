version: '3'
services:
  emoviefinder-sql:
    image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQL_PASSWORD}
      - MSSQL_PID=Developer
    ports:
      - ${SQL_PORT}:1433
    expose:
      - 1433
    networks:
      - emoviefinder
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${SQL_PASSWORD}" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  emoviefinder-api:
    restart: unless-stopped
    build:
      context: .
    environment:
      - ConnectionStrings:eMovieFinderConnection=Server=emoviefinder-sql,1433;Database=${SQL_DATABASE};User=${SQL_USER};Password=${SQL_PASSWORD};ConnectRetryCount=0; TrustServerCertificate=True
      - ASPNETCORE_ENVIRONMENT=Development
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - SEND_GRID_API_KEY=${SEND_GRID_API_KEY}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    ports:
      - 5055:5055
    networks:
      - emoviefinder
    links:
      - emoviefinder-sql
    depends_on:
      emoviefinder-sql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./eMovieFinder.API/RecommenderModels:/app/RecommenderModels

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - emoviefinder
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  emoviefinder-rabbitmqservice:
    restart: unless-stopped
    container_name: emoviefinder-rabbitmqservice
    hostname: emoviefinder-rabbitmqservice
    image: emoviefinder-rabbitmqservice:latest
    build:
      context: .
      dockerfile: eMovieFinder.RabbitMQService/Dockerfile
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    networks:
      - emoviefinder
    depends_on:
      rabbitmq:
        condition: service_healthy

  emoviefinder-resetpasswordconsumer:
    restart: unless-stopped
    container_name: emoviefinder-resetpasswordconsumer
    hostname: emoviefinder-resetpasswordconsumer
    image: emoviefinder-resetpasswordconsumer:latest
    build:
      context: .
      dockerfile: eMovieFinder.ResetPasswordConsumer/Dockerfile
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - SEND_GRID_API_KEY=${SEND_GRID_API_KEY}
    networks:
      - emoviefinder
    depends_on:
      rabbitmq:
        condition: service_healthy

networks:
  emoviefinder:
    driver: bridge
